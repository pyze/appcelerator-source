/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.pyze;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import java.util.HashMap;
import java.util.HashSet;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import com.pyze.android.Pyze;
import com.pyze.android.PyzeEvents;
import com.pyze.android.PyzeIdentity;
import com.pyze.android.PyzeSceneFlow;
import com.pyze.android.constants.Constants;
import com.pyze.android.events.dto.PyzeGeoPoint;
import com.pyze.android.inapp.PyzeInAppMessagesManager;
import com.pyze.android.inapp.dto.Button;
import com.pyze.android.inapp.dto.Message;
import com.pyze.android.inapp.dto.Metadata;
import com.pyze.android.inapp.dto.MetadataList;
import com.pyze.android.inapp.templates.ui.InAppNotificationTemplateDialogFragment;
import com.pyze.android.tags.PyzePersonalizationIntelligence;
import com.pyze.android.tags.TagsManager;

@Kroll.module(name="PyzeAppcelerator", id="ti.pyze")
public class PyzeAppceleratorModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "PyzeAppceleratorModule";
	private static final boolean DBG = TiConfig.LOGD;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public PyzeAppceleratorModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		Pyze.initialize(app,"PyzelogLevelAll");
		// put module init code that needs to run when the application is created
	}

	// Methods
	@Kroll.method
	public String example()
	{
		Log.d(LCAT, "example called");
		return "hello world";
	}

	// Properties
	@Kroll.getProperty
	public String getExampleProp()
	{
		Log.d(LCAT, "get example property");
		return "hello world";
	}


	@Kroll.setProperty
	public void setExampleProp(String value) {
		Log.d(LCAT, "set example property: " + value);
	}



    /***
     * Region Pyze Custom Event
     ***/
    @Kroll.method
    public void postCustomEvent(String eventName) {
        PyzeEvents.postCustomEvent(eventName);
    }

    @Kroll.method
    public void postCustomEventWithAttributes(String eventName, HashMap customAttributes) {
        PyzeEvents.postCustomEventWithAttributes(eventName,customAttributes);
    }

    @Kroll.method
    public void postTimedEventWithName(String eventName, double timerReference) {
        PyzeEvents.postTimedWithEventName(eventName,(long)timerReference);
    }

    @Kroll.method
    public void postTimedEventWithNameAndAttributes(String eventName, double timerReference, HashMap customAttributes) {
        PyzeEvents.postTimedWithEventName(eventName,timerReference,customAttributes);
    }
    /***
     End Region Pyze Custom Event
     ***/

    /***
     * Region PyzeAdvocacy
     ***/
    @Kroll.method
    public void postRequestFeedback(HashMap customAttributes) {
        PyzeEvents.PyzeAdvocacy.postRequestForFeedback(customAttributes);
    }

    @Kroll.method
    public void postFeedbackProvided(HashMap customAttributes) {
        PyzeEvents.PyzeAdvocacy.postFeedbackProvided(customAttributes);
    }

    @Kroll.method
    public void postRequestRating(HashMap customAttributes) {
        PyzeEvents.PyzeAdvocacy.postRequestRating(customAttributes);
    }
    /***
     End Region PyzeAdvocacy
     ***/

    /***
     * Region PyzeAd
     ***/
    @Kroll.method
    public void postAdRequested(String adNetwork, String appScreen, String size, String type, HashMap customAttributes) {
        PyzeEvents.PyzeAd.postAdRequested(adNetwork,appScreen,size,type,customAttributes);
    }

    @Kroll.method
    public void postAdReceived(String adNetwork, String appScreen, String resultCode, boolean success, HashMap customAttributes) {
        PyzeEvents.PyzeAd.postAdReceived(adNetwork,appScreen,resultCode,success,customAttributes);
    }

    @Kroll.method
    public void postAdClicked(String adNetwork, String appScreen, String adCode, boolean success, String errorCode, HashMap customAttributes) {
        PyzeEvents.PyzeAd.postAdClicked(adNetwork,appScreen,adCode,success,errorCode,customAttributes);
    }

/***
 End Region PyzeAd
 ***/

    /***
     * Region PyzeAccount
     ***/

    @Kroll.method
    public void postLoginOffered(HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postLoginOffered(customAttributes);
    }

    @Kroll.method
    public void postLoginStarted(HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postLoginStarted(customAttributes);
    }

    @Kroll.method
    public void postSocialLoginOffered(String type, HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postSocialLoginOffered(type,customAttributes);
    }

    @Kroll.method
    public void postSocialLoginStarted(String type, HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postSocialLoginStarted(type,customAttributes);
    }

    @Kroll.method
    public void postSocialLoginCompleted(String type, HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postSocialLoginCompleted(type,customAttributes);
    }

    @Kroll.method
    public void postPasswordResetCompleted(HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postPasswordResetCompleted(customAttributes);
    }

    @Kroll.method
    public void postRegistrationOffered(HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postRegistrationOffered(customAttributes);
    }

    @Kroll.method
    public void postRegistrationStarted(HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postRegistrationStarted(customAttributes);
    }

    @Kroll.method
    public void postRegistrationCompleted(HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postRegistrationCompleted(customAttributes);
    }

    @Kroll.method
    public void postLoginCompleted(boolean success, String errCodeString, HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postLoginCompleted(success,errCodeString,customAttributes);
    }

    @Kroll.method
    public void postLogoutCompleted(HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postLogoutCompleted(customAttributes);
    }

    @Kroll.method
    public void postPasswordResetRequest(HashMap customAttributes) {
        PyzeEvents.PyzeAccount.postPasswordResetRequested(customAttributes);
    }
/***
 End Region PyzeAccount
 ***/

    /***
     * Region PyzeContent
     ***/
    @Kroll.method
    public void postViewed(String contentName, String categoryName, String contentId, HashMap customAttributes) {
        PyzeEvents.PyzeContent.postViewed(contentName,categoryName,contentId,customAttributes);
    }

    @Kroll.method
    public void postSearched(String searchString, HashMap customAttributes) {
        PyzeEvents.PyzeContent.postSearched(searchString,customAttributes);
    }

    @Kroll.method
    public void postRatedOn5PointScale(String contentName, String categoryName, String contentId, int rating, HashMap customAttributes) {
        PyzeEvents.PyzeContent.postRatedOn5PointScale(contentName,categoryName,contentId,rating,customAttributes);
    }

    @Kroll.method
    public void postRatedThumbsUp(String contentName, String categoryName, String contentId, HashMap customAttributes) {
        PyzeEvents.PyzeContent.postRatedThumbsUp(contentName,categoryName,contentId,customAttributes);
    }

    @Kroll.method
    public void postRatedThumbsDown(String contentName, String categoryName, String contentId, HashMap customAttributes) {
        PyzeEvents.PyzeContent.postRatedThumbsDown(contentName,categoryName,contentId,customAttributes);
    }

/***
 End Region PyzeContent
 ***/

    /***
     * Region PyzeMessaging
     ***/
    @Kroll.method
    public void postMessageSent(String uniqueId, HashMap customAttributes) {
        PyzeEvents.PyzeMessaging.postMessageSent(uniqueId,customAttributes);
    }

    @Kroll.method
    public void postMessageSentOfType(int messageType, String uniqueId, HashMap customAttributes) {
        PyzeEvents.PyzeMessaging.postMessageSentOfType(Constants.PyzeMessageType.values()[messageType],uniqueId,customAttributes);
    }

    @Kroll.method
    public void postMessageReceived(String uniqueId, HashMap customAttributes) {
        PyzeEvents.PyzeMessaging.postMessageReceived(uniqueId,customAttributes);
    }

    @Kroll.method
    public void postMessageNewConversation(String uniqueId, HashMap customAttributes) {
        PyzeEvents.PyzeMessaging.postMessageNewConversation(uniqueId,customAttributes);
    }

    @Kroll.method
    public void postMessageVoiceCall(String uniqueId, HashMap customAttributes) {
        PyzeEvents.PyzeMessaging.postMessageVoiceCall(uniqueId,customAttributes);
    }

    /***
     * End Region PyzeMessaging
     ***/


    /***
     * Region PyzeInAppPurchaseRevenue
     ***/
    @Kroll.method
    public void postPriceListViewed(String appScreenRequestFromId, HashMap customAttributes) {
        PyzeEvents.PyzeInAppPurchaseRevenue.postPriceListViewed(appScreenRequestFromId,customAttributes);
    }

    @Kroll.method
    public void postBuyItem(String itemName, String currency, float price, String itemType, String itemSKU, String quantity, String appScreenRequestFromId, boolean status, String successOrErrorCode, HashMap customAttributes) {
        PyzeEvents.PyzeInAppPurchaseRevenue.postBuyItem(itemName,currency, String.valueOf(price),itemType,itemSKU,quantity,appScreenRequestFromId,status,successOrErrorCode,customAttributes);
    }

    @Kroll.method
    public void postBuyItemShort(String itemName, float price, String currencyISO4217Code, HashMap customAttributes) {
        PyzeEvents.PyzeInAppPurchaseRevenue.postBuyItem(itemName, String.valueOf(price),currencyISO4217Code,customAttributes);
    }

    @Kroll.method
    public void postBuyItemUSD(String itemName, float price, HashMap customAttributes) {
        PyzeEvents.PyzeInAppPurchaseRevenue.postBuyItemInUSD(itemName, String.valueOf(price),customAttributes);
    }

    /***
     * End Region PyzeInAppPurchaseRevenue
     ***/


    /***
     * Region PyzeTasks
     ***/
    @Kroll.method
    public void postAddToCalendarWithAttributes(HashMap customAttributes) {
        PyzeEvents.PyzeTasks.postAddToCalendarwithAttributes(customAttributes);
    }

    /***
     * End Region PyzeTasks
     ***/

    /***
     * Region PyzeSocial
     ***/
    @Kroll.method
    public void postSocialContentShareForNetworkName(String socialNetworkName, String contentReference, String category, HashMap customAttributes) {
        PyzeEvents.PyzeSocial.postSocialContentShareForNetworkName(socialNetworkName,contentReference,category,customAttributes);
    }

    @Kroll.method
    public void postLiked(String socialNetworkName, String contentReference, String category, HashMap customAttributes) {
        PyzeEvents.PyzeSocial.postLiked(socialNetworkName,contentReference,category,customAttributes);
    }

    @Kroll.method
    public void postFollowed(String socialNetworkName, String contentReference, String category, HashMap customAttributes) {
        PyzeEvents.PyzeSocial.postFollowed(socialNetworkName,contentReference,category,customAttributes);
    }

    @Kroll.method
    public void postSubscribed(String socialNetworkName, String contentReference, String category, HashMap customAttributes) {
        PyzeEvents.PyzeSocial.postSubscribed(socialNetworkName,contentReference,category,customAttributes);
    }

    @Kroll.method
    public void postInvitedFriends(String socialNetworkName, HashMap customAttributes) {
        PyzeEvents.PyzeSocial.postInvitedFriend(socialNetworkName,customAttributes);
    }

    @Kroll.method
    public void postFoundFriends(String source, HashMap customAttributes) {
        PyzeEvents.PyzeSocial.postFoundFriends(source,customAttributes);
    }
/***
 End Region PyzeSocial
 ***/

    /***
     * Region PyzeCommerceDiscovery
     ***/
    @Kroll.method
    public void pyzeCommerceDiscoveryPostSearched(String searchString, int latency, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceDiscovery.postSearched(searchString,latency,customAttributes);
    }

    @Kroll.method
    public void postBrowsedCategory(String category, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceDiscovery.postBrowsedCategory(category,customAttributes);
    }

    @Kroll.method
    public void postBrowsedDeals(String uniqueDealId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceDiscovery.postBrowsedDeals(uniqueDealId,customAttributes);
    }

    @Kroll.method
    public void postBrowsedRecommendations(String uniqueRecommendationID, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceDiscovery.postBrowsedRecommendations(uniqueRecommendationID,customAttributes);
    }

    @Kroll.method
    public void postBrowsedPrevOrders(String rangeStart, String rangeEnd, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceDiscovery.postBrowsedPrevOrders(rangeStart,rangeEnd,customAttributes);
    }

    /***
     * End Region PyzeCommerceDiscovery
     ***/

    /***
     * Region PyzeCommerceCuratedList
     ***/
    @Kroll.method
    public void postCreated(String uniqueCuratedListID, String curatedListType, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCuratedList.postCreated(uniqueCuratedListID,curatedListType,customAttributes);
    }

    @Kroll.method
    public void postBrowsed(String curatedList, String curatedListCreator, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCuratedList.postBrowsed(curatedList,curatedListCreator,customAttributes);
    }

    @Kroll.method
    public void postAddedItem(String uniqueCuratedListId, String itemCategory, String itemId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCuratedList.postAddedItem(uniqueCuratedListId,itemCategory,itemId,customAttributes);
    }

    @Kroll.method
    public void postRemovedItem(String uniqueCuratedListId, String itemCategory, String itemId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCuratedList.postRemovedItem(uniqueCuratedListId,itemCategory,itemId,customAttributes);
    }

    @Kroll.method
    public void postShared(String curatedList, String curatedListCreator, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCuratedList.postShared(curatedList,curatedListCreator,customAttributes);
    }

    @Kroll.method
    public void postPublished(String curatedList, String curatedListCreator, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCuratedList.postPublished(curatedList,curatedListCreator,customAttributes);
    }

    /***
     * End Region PyzeCommerceCuratedList
     ***/


    /***
     * Region PyzeCommerceWishList
     ***/
    @Kroll.method
    public void pyzeCommerceWishListPostCreated(String uniqueWishListId, String wishListType, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceWishList.postCreated(uniqueWishListId,wishListType,customAttributes);
    }

    @Kroll.method
    public void pyzeCommerceWishListPostBrowsed(String uniqueWishListId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceWishList.postBrowsed(uniqueWishListId,customAttributes);
    }

    @Kroll.method
    public void pyzeCommerceWishListPostAddedItem(String uniqueWishListId, String itemCategory, String itemId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceWishList.postAddedItem(uniqueWishListId,itemCategory,itemId,customAttributes);
    }

    @Kroll.method
    public void pyzeCommerceWishListPostRemovedItem(String uniqueWishListId, String itemCategory, String itemId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceWishList.postRemovedItem(uniqueWishListId,itemCategory,itemId,customAttributes);
    }

    @Kroll.method
    public void pyzeCommerceWishListPostShared(String uniqueWishListId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceWishList.postShared(uniqueWishListId,customAttributes);
    }

    /***
     * End Region PyzeCommerceWishList
     ***/


    /***
     * Region PyzeCommerceBeacon
     ***/
    @Kroll.method
    public void postEnteredRegion(String beaconUUID, String beaconMajor, String beaconMinor, String uniqueRegionIdentifier, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceBeacon.postEnteredRegion(beaconUUID,beaconMajor,beaconMinor,uniqueRegionIdentifier,customAttributes);
    }

    @Kroll.method
    public void postExitedRegion(String beaconUUID, String beaconMajor, String beaconMinor, String uniqueRegionIdentifier, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceBeacon.postExitedRegion(beaconUUID,beaconMajor,beaconMinor,uniqueRegionIdentifier,customAttributes);
    }

    @Kroll.method
    public void postTransactedRegion(String beaconUUID, String beaconMajor, String beaconMinor, String uniqueRegionIdentifier, String proximity, String actionId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceBeacon.postTransactedInRegion(beaconUUID,beaconMajor,beaconMinor,uniqueRegionIdentifier,proximity,actionId,customAttributes);
    }

    /***
     * End Region PyzeCommerceBeacon
     ***/

    /***
     * Region PyzeCommerceCart
     ***/
    @Kroll.method
    public void postAddItem(String cartId, String itemCategory, String itemId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postAddItem(cartId,itemCategory,itemId,customAttributes);
    }

    @Kroll.method
    public void postAddItemFromDeals(String cartId, String itemCategory, String itemId, String uniqueDealId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postAddItemFromDeals(cartId,itemCategory,itemId,uniqueDealId,customAttributes);
    }

    @Kroll.method
    public void postAddItemFromWishList(String cartId, String itemCategory, String itemId, String uniqueWishListId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postAddItemFromWishList(cartId,itemCategory,itemId,uniqueWishListId,customAttributes);
    }

    @Kroll.method
    public void postAddItemFromCuratedList(String cartId, String itemCategory, String itemId, String uniqueCuratedListId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postAddItemFromCuratedList(cartId,itemCategory,itemId,uniqueCuratedListId,customAttributes);
    }

    @Kroll.method
    public void postAddItemFromRecommendations(String cartId, String itemCategory, String itemId, String uniqueRecommendationId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postAddItemFromRecommendations(cartId,itemCategory,itemId,uniqueRecommendationId,customAttributes);
    }

    @Kroll.method
    public void postAddItemFromPreviousOrders(String cartId, String itemCategory, String itemId, String previousOrderId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postAddItemFromPreviousOrders(cartId,itemCategory,itemId,previousOrderId,customAttributes);
    }

    @Kroll.method
    public void postAddItemFromSearchResults(String cartId, String itemCategory, String itemId, String searchString, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postAddItemFromSearchResults(cartId,itemCategory,itemId,searchString,customAttributes);
    }

    @Kroll.method
    public void postAddItemFromSubscriptionList(String cartId, String itemCategory, String itemId, String uniqueSubscriptionId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postAddItemFromSubcriptionList(cartId,itemCategory,itemId,uniqueSubscriptionId,customAttributes);
    }

    @Kroll.method
    public void postRemoveItemFromCart(String cartId, String itemCategory, String itemId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postRemoveItemFromCart(cartId,itemCategory,itemId,customAttributes);
    }

    @Kroll.method
    public void postView(String cartId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postView(cartId,customAttributes);
    }

    @Kroll.method
    public void postShare(String cartId, String sharedWith, String itemId, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCart.postShare(cartId,sharedWith,itemId,customAttributes);
    }

/***
 End Region PyzeCommerceCart
 ***/


    /***
     * Region PyzeCommerceItem
     ***/
    @Kroll.method
    public void postViewedItem(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceItem.postViewedItem(customAttributes);
    }

    @Kroll.method
    public void postScannedItem(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceItem.postScannedItem(customAttributes);
    }

    @Kroll.method
    public void postViewedReviews(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceItem.postViewedReviews(customAttributes);
    }

    @Kroll.method
    public void postViewedDetails(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceItem.postViewedDetails(customAttributes);
    }

    @Kroll.method
    public void postViewedPrice(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceItem.postViewedPrice(customAttributes);
    }

    @Kroll.method
    public void postItemShare(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceItem.postItemShareItem(customAttributes);
    }

    @Kroll.method
    public void postItemRateOn5Scale(String itemSKU, String rating, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceItem.postItemRateOn5Scale(itemSKU,rating,customAttributes);
    }

    /***
     * End Region PyzeCommerceItem
     ***/


    /***
     * Region PyzeCommerceCheckout
     ***/
    @Kroll.method
    public void postCheckoutStarted(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCheckout.postCheckoutStarted(customAttributes);
    }

    @Kroll.method
    public void postCheckoutCompleted(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCheckout.postCheckoutCompleted(customAttributes);
    }

    @Kroll.method
    public void postCheckoutAbandoned(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCheckout.postCheckoutAbandoned(customAttributes);
    }

    @Kroll.method
    public void postCheckoutFailed(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceCheckout.postCheckoutFailed(customAttributes);
    }

    /***
     * End Region PyzeCommerceCheckout
     ***/


    /***
     * Region PyzeCommerceShipping
     ***/
    @Kroll.method
    public void postShippingStarted(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceShipping.postShippingStarted(customAttributes);
    }

    @Kroll.method
    public void postShippingCompleted(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceShipping.postShippingCompleted(customAttributes);
    }

    @Kroll.method
    public void postShippingAbandoned(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceShipping.postShippingAbandoned(customAttributes);
    }

    @Kroll.method
    public void postShippingFailed(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceShipping.postShippingFailed(customAttributes);
    }

    /***
     * End Region PyzeCommerceShipping
     ***/


    /***
     * Region PyzeCommerceBilling
     ***/
    @Kroll.method
    public void postBillingStarted(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceBilling.postBillingStarted(customAttributes);
    }

    @Kroll.method
    public void postBillingCompleted(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceBilling.postBillingCompleted(customAttributes);
    }

    @Kroll.method
    public void postBillingAbandoned(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceBilling.postBillingAbandoned(customAttributes);
    }

    @Kroll.method
    public void postBillingFailed(HashMap customAttributes) {
        PyzeEvents.PyzeCommerceBilling.postBillingFailed(customAttributes);
    }

    /***
     * End Region PyzeCommerceBilling
     ***/


    /***
     * Region PyzeCommercePayment
     ***/
    @Kroll.method
    public void postPaymentStarted(HashMap customAttributes) {
        PyzeEvents.PyzeCommercePayment.postPaymentStarted(customAttributes);
    }

    @Kroll.method
    public void postPaymentCompleted(HashMap customAttributes) {
        PyzeEvents.PyzeCommercePayment.postPaymentCompleteed(customAttributes);
    }

    @Kroll.method
    public void postPaymentAbandoned(HashMap customAttributes) {
        PyzeEvents.PyzeCommercePayment.postPaymentAbandoned(customAttributes);
    }

    @Kroll.method
    public void postPaymentFailed(HashMap customAttributes) {
        PyzeEvents.PyzeCommercePayment.postPaymentFailed(customAttributes);
    }

    /***
     * End Region PyzeCommercePayment
     ***/


    /***
     * Region PyzeExplicitActivation
     ***/
    @Kroll.method
    public void postWithAttributes(HashMap customAttributes) {
        PyzeEvents.PyzeExplicitActivation.post(customAttributes);
    }

    @Kroll.method
    public void post() {
        PyzeEvents.PyzeExplicitActivation.post();
    }

    /***
     * End Region PyzeExplicitActivation
     ***/


    /***
     * Region PyzeGaming
     ***/
    @Kroll.method
    public void postLevelStarted(String level, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postLevelStarted(level,customAttributes);
    }

    @Kroll.method
    public void postLevelEnded(String level, String score, String success, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postLevelEnded(level,score,success,customAttributes);
    }

    @Kroll.method
    public void postPowerUpConsumed(String level, String type, String value, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postPowerUpConsumed(level,type,value,customAttributes);
    }

    @Kroll.method
    public void postInGameItemPurchased(String uniqueItemId, String itemType, String value, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postInGameItemPurchased(uniqueItemId,itemType,value,customAttributes);
    }

    @Kroll.method
    public void postAchievementEarned(String uniqueAchievementId, String type, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postAchievementEarned(uniqueAchievementId,type,customAttributes);
    }

    @Kroll.method
    public void postSummaryViewed(String level, String type, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postSummaryViewed(level,type,customAttributes);
    }

    @Kroll.method
    public void postLeaderBoardViewed(String level, String score, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postLeaderBoardViewed(level,score,customAttributes);
    }

    @Kroll.method
    public void postScorecardViewed(String level, String score, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postScorecardViewed(level,score,customAttributes);
    }

    @Kroll.method
    public void postHelpViewed(String helpTopicId, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postHelpViewed(helpTopicId,customAttributes);
    }

    @Kroll.method
    public void postTutorialViewed(String helpTopicId, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postTutorialViewed(helpTopicId,customAttributes);
    }

    @Kroll.method
    public void postFriendChallenged(HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postFriendChallenged(customAttributes);
    }

    @Kroll.method
    public void postChallengeAccepted(HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postChallengeAccepted(customAttributes);
    }

    @Kroll.method
    public void postChallengeDeclined(HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postChallengeDeclined(customAttributes);
    }

    @Kroll.method
    public void postGameStarted(String level, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postGameStart(level,customAttributes);
    }

    @Kroll.method
    public void postGameEnd(String levelsPlayed, String levelsWon, HashMap customAttributes) {
        PyzeEvents.PyzeGaming.postGameEnd(levelsPlayed,levelsWon,customAttributes);
    }

    /***
     * End Region PyzeGaming
     ***/

    /***
     * Region PyzeHealthAndFitness
     ***/
    @Kroll.method
    public void postStarted(HashMap customAttributes) {
        PyzeEvents.PyzeHealthAndFitness.postStarted(customAttributes);
    }

    @Kroll.method
    public void postEnded(HashMap customAttributes) {
        PyzeEvents.PyzeHealthAndFitness.postEnded(customAttributes);
    }

    @Kroll.method
    public void postAchievementReceived(HashMap customAttributes) {
        PyzeEvents.PyzeHealthAndFitness.postAchievementReceived(customAttributes);
    }

    @Kroll.method
    public void postStepGoalCompleted(HashMap customAttributes) {
        PyzeEvents.PyzeHealthAndFitness.postStepGoalCompleted(customAttributes);
    }

    @Kroll.method
    public void postGoalCompleted(HashMap customAttributes) {
        PyzeEvents.PyzeHealthAndFitness.postGoalCompleted(customAttributes);
    }

    @Kroll.method
    public void postChallengedFriend(HashMap customAttributes) {
        PyzeEvents.PyzeHealthAndFitness.postChallengedFriend(customAttributes);
    }

    @Kroll.method
    public void pyzeHealthAndFitnessPostChallengeAccepted(HashMap customAttributes) {
        PyzeEvents.PyzeHealthAndFitness.postChallengeAccepted(customAttributes);
    }

    /***
     * End Region PyzeHealthAndFitness
     ***/


    /***
     * Region PyzeMedia
     ***/
    @Kroll.method
    public void pyzeMediaPostPlayedMedia(String contentName, String type, String categoryName, String percent, String contentId, HashMap customAttributes) {
        PyzeEvents.PyzeMedia.postPlayedMedia(contentName,type,categoryName,percent,contentId,customAttributes);
    }

    @Kroll.method
    public void pyzeMediaPostSearched(String searchString, HashMap customAttributes) {
        PyzeEvents.PyzeMedia.postSearched(searchString,customAttributes);
    }

    @Kroll.method
    public void postRateOn5PointScale(String contentName, String categoryName, String contentId, int rating, HashMap customAttributes) {
        PyzeEvents.PyzeMedia.postRateOn5PointScale(contentName,categoryName,contentId,rating,customAttributes);
    }

    @Kroll.method
    public void pyzeMediaPostRatedThumbsUp(String contentName, String categoryName, String contentId, HashMap customAttributes) {
        PyzeEvents.PyzeMedia.postRatedThumbsUp(contentName,categoryName,contentId,customAttributes);
    }

    @Kroll.method
    public void pyzeMediaPostRatedThumbsDown(String contentName, String categoryName, String contentId, HashMap customAttributes) {
        PyzeEvents.PyzeMedia.postRatedThumbsDown(contentName,categoryName,contentId,customAttributes);
    }

    /***
     * End Region PyzeMedia
     ***/


    /***
     * Region PyzeBitcoin
     ***/
    @Kroll.method
    public void postSentBitCoins(HashMap customAttributes) {
        PyzeEvents.PyzeBitcoin.postSentBitCoins(customAttributes);
    }

    @Kroll.method
    public void postRequestedBitCoins(HashMap customAttributes) {
        PyzeEvents.PyzeBitcoin.postRequestedBitCoins(customAttributes);
    }

    @Kroll.method
    public void postReceivedBitCoins(HashMap customAttributes) {
        PyzeEvents.PyzeBitcoin.postReceivedBitCoins(customAttributes);
    }

    @Kroll.method
    public void postImportedPrivateKey(HashMap customAttributes) {
        PyzeEvents.PyzeBitcoin.postImportedPrivateKey(customAttributes);
    }

    @Kroll.method
    public void postViewedTransaction(HashMap customAttributes) {
        PyzeEvents.PyzeBitcoin.postViewedTransactions(customAttributes);
    }

    @Kroll.method
    public void postScannedPrivateKey(HashMap customAttributes) {
        PyzeEvents.PyzeBitcoin.postScannedPrivateKey(customAttributes);
    }

    /***
     * End Region PyzeBitcoin
     ***/


    /***
     * Region PyzeCommerceRevenue
     ***/
    @Kroll.method
    public void postRevenue(int revenue, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceRevenue.postRevenue(revenue,customAttributes);
    }

    @Kroll.method
    public void postRevenueDetailed(int revenue, String paymentRevenue, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceRevenue.postRevenue(revenue, paymentRevenue, customAttributes);
    }

    @Kroll.method
    public void postRevenueUsingApplePay(int revenue, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceRevenue.postRevenueUsingApplePay(revenue,customAttributes);
    }

    @Kroll.method
    public void postRevenueUsingSamsungPay(int revenue, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceRevenue.postRevenueUsingSamsungPay(revenue, customAttributes);
    }

    @Kroll.method
    public void postRevenueUsingGooglePay(int revenue, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceRevenue.postRevenueUsingGooglePay(revenue, customAttributes);
    }

    /***
     * End Region PyzeCommerceRevenue
     ***/


    /***
     * Region PyzeDrone
     ***/
    @Kroll.method
    public void postPreflightCheckCompleted(String overallStatus, String storageStatus, int droneBatteryChargePercent, int deviceBatteryChargePercent, String calibrationStatus, String gpsStatus, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postPreflightCheckCompleted(overallStatus,storageStatus,droneBatteryChargePercent,deviceBatteryChargePercent,calibrationStatus,gpsStatus,customAttributes);
    }

    @Kroll.method
    public void postInflightCheckCompleted(String overallStatus, String rollStatus, String pitchStatus, String yawStatus, String throttleStatus, String trimmingSettings, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postInflightCheckCompleted(overallStatus,rollStatus,pitchStatus,yawStatus,throttleStatus,trimmingSettings,customAttributes);
    }

    @Kroll.method
    public void postConnected(HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postConnected(customAttributes);
    }

    @Kroll.method
    public void postDisconnected(String code, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postDisconnected(code,customAttributes);
    }

    @Kroll.method
    public void postAirborne(String status, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postAirborne(status,customAttributes);
    }

    @Kroll.method
    public void postLanded(String status, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postLanded(status,customAttributes);
    }

    @Kroll.method
    public void postFlightPathCreated(String uniqueFlightPathId, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postFlightPathCreated(uniqueFlightPathId,customAttributes);
    }

    @Kroll.method
    public void postFlightPathUploaded(String uniqueFlightPathId, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postFlightPathUploaded(uniqueFlightPathId,customAttributes);
    }

    @Kroll.method
    public void postFlightPathEdited(String uniqueFlightPathId, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postFlightPathEdited(uniqueFlightPathId,customAttributes);
    }

    @Kroll.method
    public void postFlightPathDeleted(String uniqueFlightPathId, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postFlightPathDeleted(uniqueFlightPathId,customAttributes);
    }

    @Kroll.method
    public void postFlightPathCompleted(String uniqueFlightPathId, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postFlightPathCompleted(uniqueFlightPathId,customAttributes);
    }

    @Kroll.method
    public void postFirstPersonViewEnabled(String status, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postFirstPersonViewEnabled(status,customAttributes);
    }

    @Kroll.method
    public void postFirstPersonViewDisabled(String status, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postFirstPersonViewDisabled(status,customAttributes);
    }

    @Kroll.method
    public void postStartedAerialVideo(String status, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postStartedAerialVideo(status,customAttributes);
    }

    @Kroll.method
    public void postStartedAerialVideoDetailed(String status, String videoIdentifer, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postStartedAerialVideo(status,videoIdentifer,customAttributes);
    }

    @Kroll.method
    public void postStoppedAerialVideo(String status, String secondsLength, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postStoppedAerialVideo(status,secondsLength,customAttributes);
    }

    @Kroll.method
    public void postTookAerialPicture(String status, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postTookAerialPicture(status,customAttributes);
    }

    @Kroll.method
    public void postStartedAerialTimelapse(String status, int totalshots, int secondsBetweenShots, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postStartedAerialTimelapse(status,totalshots, String.valueOf(secondsBetweenShots),customAttributes);
    }

    @Kroll.method
    public void postStoppedAerialTimelapse(String status, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postStoppedAerialTimelapse(status,customAttributes);
    }

    @Kroll.method
    public void postRequestedReturnToBase(HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postRequestedReturnToBase(customAttributes);
    }

    @Kroll.method
    public void postSwitchedToHelicopterFlyingMode(HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postSwitchedToHelicopterFlyingMode(customAttributes);
    }

    @Kroll.method
    public void postSwitchedToAltitudeFlyingMode(HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postSwitchedToAttitudeFlyingMode(customAttributes);
    }

    @Kroll.method
    public void postSwitchedToGPSHoldFlyingMode(HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postSwitchedToGPSHoldFlyingMode(customAttributes);
    }

    @Kroll.method
    public void postSwitchedToCustomFlyingMode(int mode, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postSwitchedToCustomFlyingMode(mode,customAttributes);
    }

    @Kroll.method
    public void postSetMaxAltitude(int altitudeInMeters, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postSetMaxAltitude(altitudeInMeters,customAttributes);
    }

    @Kroll.method
    public void postSetAutoReturnInSeconds(int seconds, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postSetAutoReturnInSeconds(seconds,customAttributes);
    }

    @Kroll.method
    public void postSetAutoReturnWhenLowMemory(int memoryLeftInKilobytes, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postSetAutoReturnWhenLowMemory(memoryLeftInKilobytes,customAttributes);
    }

    @Kroll.method
    public void postSetAutoReturnWhenLowBattery(int batterylevelPercent, HashMap customAttributes) {
        PyzeEvents.PyzeDrone.postSetAutoReturnWhenLowBattery(batterylevelPercent,customAttributes);
    }

    /***
     * End Region PyzeDrone
     ***/


    /***
     * Region PyzeWeatherAndForecast
     ***/
    @Kroll.method
    public void postWeatherRequestedForType(int type, int howManyDays, HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherRequestedForType(type,howManyDays,customAttributes);
    }

    @Kroll.method
    public void postWeatherHistoricalRequest(int startInterval, int endInterval, HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherHistoricalRequest(startInterval,endInterval,customAttributes);
    }

    @Kroll.method
    public void postWeatherStationsRequestWithClusterData(String clusterData, String point, HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherStationsRequestWithClusterData(clusterData,stringToPyzeGeoPoint(point),customAttributes);
    }

    @Kroll.method
    public void postWeatherMapLayersRequested(String layerName, HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherMapLayersRequested(layerName, customAttributes);
    }

    @Kroll.method
    public void postWeatherRequestForUVIndexAtPoint(String point, HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherRequestForUVIndexAtPoint(stringToPyzeGeoPoint(point),customAttributes);
    }

    @Kroll.method
    public void postWeatherResponseForType(int type, HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherResponseForType(type,customAttributes);
    }

    @Kroll.method
    public void postWeatherResponseForHistoricalData(HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherResponseForHistoricalData(customAttributes);
    }

    @Kroll.method
    public void postWeatherStationResponseData(HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherStationResponseData(customAttributes);
    }

    @Kroll.method
    public void postWeatherMapLayersResponse(HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherMapLayersResponse(customAttributes);
    }

    @Kroll.method
    public void postWeatherResponseForUVIndex(HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postWeatherResponseForUVIndex(customAttributes);
    }

    @Kroll.method
    public void postForecastRequestForKeywords(String commaSeperatedKeywords, HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postForecastRequestForKeywords(commaSeperatedKeywords, customAttributes);
    }

    @Kroll.method
    public void postForecastResponseForKeywordsShort(HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postForecastResponseForKeywords(customAttributes);
    }

    @Kroll.method
    public void postForecastFetch(int nDays, HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postForecastFetch(nDays,customAttributes);
    }

    @Kroll.method
    public void postForecastFetchResponse(HashMap customAttributes) {
        PyzeEvents.PyzeWeatherAndForecast.postForecastFetchResponse(customAttributes);
    }

    /***
     * End Region PyzeWeatherAndForecast
     ***/


    /***
     * Region PyzeSupport
     ***/

    @Kroll.method
    public void postRequestedPhoneCallback(HashMap customAttributes) {
        PyzeEvents.PyzeSupport.postRequestedPhonecallback(customAttributes);
    }

    @Kroll.method
    public void postLiveChatStartedWithTopic(String topic, HashMap customAttributes) {
        PyzeEvents.PyzeSupport.postLiveChatStartedWithTopic(topic,customAttributes);
    }

    @Kroll.method
    public void postLiveChatEndedWithTopic(String topic, HashMap customAttributes) {
        PyzeEvents.PyzeSupport.postLiveChatEndedWithTopic(topic,customAttributes);
    }

    @Kroll.method
    public void postTicketCreated(String itemID, String topic, HashMap customAttributes) {
        PyzeEvents.PyzeSupport.postTicketCreated(itemID,topic,customAttributes);
    }

    @Kroll.method
    public void postFeedbackReceived(String feedback, HashMap customAttributes) {
        PyzeEvents.PyzeSupport.postFeedbackReceived(feedback,customAttributes);
    }

    @Kroll.method
    public void postQualityOfServiceRated(String comment, String rating, HashMap customAttributes) {
        PyzeEvents.PyzeSupport.postQualityOfServiceRated(comment,rating,customAttributes);
    }

    /***
     * End Region PyzeSupport
     ***/


    /***
     * Region PyzeCommerceSupport
     ***/
    @Kroll.method
    public void pyzeCommerceSupportPostLiveChatStartedWithTopic(String topic, String orderNumber, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceSupport.postLiveChatStartedWithTopic(topic,orderNumber,customAttributes);
    }

    @Kroll.method
    public void pyzeCommerceSupportPostLiveChatEndedWithTopic(String topic, String orderNumber, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceSupport.postLiveChatEndedWithTopic(topic,orderNumber,customAttributes);
    }

    @Kroll.method
    public void pyzeCommerceSupportPostTicketCreated(String topic, String itemID, String orderNumber, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceSupport.postTicketCreated(topic,itemID,orderNumber,customAttributes);
    }

    @Kroll.method
    public void pyzeCommerceSupportPostFeedbackReceived(String feedback, String orderNumber, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceSupport.postFeedbackReceived(feedback,orderNumber,customAttributes);
    }

    @Kroll.method
    public void pyzeCommerceSupportPostQualityOfServiceRated(String comment, String rating, String orderNumber, HashMap customAttributes) {
        PyzeEvents.PyzeCommerceSupport.postQualityOfServiceRated(comment,rating,orderNumber, customAttributes);
    }

    /***
     * End Region PyzeCommerceSupport
     ***/

    /***
     * Region PyzeInAppMessages
     ***/

    @Kroll.method
    public void showInAppNotification(final KrollFunction callback) {
        Pyze.showInAppNotificationUI(TiApplication.getInstance().getCurrentActivity(), new InAppNotificationTemplateDialogFragment.OnButtonClickListener() {
            @Override
            public void onButtonClicked(Pyze.InAppStatus inAppStatus) {
                HashMap params = new HashMap<>();
                params.put("mId",inAppStatus.mId);
                params.put("cId",inAppStatus.cId);
                params.put("title",inAppStatus.title);
                params.put("deeplinkUrl",inAppStatus.deeplinkUrl);
                params.put("status",inAppStatus.status);
                params.put("buttonId",inAppStatus.buttonId);
                callback.call(getKrollObject(), params);
            }
        });
    }

    @Kroll.method
    public void showInAppNotificatonWithCustomAttributes(int messageType, String navigationBarColor, final KrollFunction callback) {
        Pyze.showInAppNotificationUI(TiApplication.getInstance().getCurrentActivity(), Constants.PyzeInAppMessageType.values()[messageType], navigationBarColor, new InAppNotificationTemplateDialogFragment.OnButtonClickListener() {
            @Override
            public void onButtonClicked(Pyze.InAppStatus inAppStatus) {
                HashMap params = new HashMap<>();
                params.put("mId",inAppStatus.mId);
                params.put("cId",inAppStatus.cId);
                params.put("title",inAppStatus.title);
                params.put("deeplinkUrl",inAppStatus.deeplinkUrl);
                params.put("status",inAppStatus.status);
                params.put("buttonId",inAppStatus.buttonId);
                callback.call(getKrollObject(), params);
            }
        });
    }

    @Kroll.method
    public void closeInAppMessage() {
        Pyze.closeInAppMessageDialog(TiApplication.getInstance().getCurrentActivity());
    }

    @Kroll.method
    public void countNewUnFetchedMessages(final KrollFunction callback) {
        Pyze.countNewUnFetched(new PyzeInAppMessagesManager.GetMessageCountListener() {
            @Override
            public void onUnreadMessageCountDownloaded(int i) {
				HashMap map = new HashMap();
  				map.put("response", i);
                callback.call(getKrollObject(),map);
            }
        });
    }

    @Kroll.method
    public void getMessageHeaderOfType(int messageType, final KrollFunction callback) {
        Pyze.getMessageHeadersForType(Constants.PyzeInAppMessageType.values()[messageType], new PyzeInAppMessagesManager.GetMetadataListener() {
            @Override
            public void onMetadataReceived(MetadataList metadataList) {
                String value = "[";
                int metaDataListLength = metadataList.size();
                for(int messageHeaderIndex = 0; messageHeaderIndex<metaDataListLength;messageHeaderIndex++){
                    Metadata metadata = metadataList.get(messageHeaderIndex);
                    value+="{\"cid\":\""+metadata.cid+"\",\"contentRead\":\""+metadata.isRead+"\",\"mid\":\""+metadata.mid+"\",\"title\":\""+metadata.title+"\"}";
                    if(messageHeaderIndex < metaDataListLength-1){
                        value +=",";
                    }
                }
				value+="]";
				HashMap map = new HashMap();
  				map.put("response", value);
                callback.call(getKrollObject(),map);
            }
        });
    }

    @Kroll.method
    public void getMessageWithContentID(String contentId, String messageId, final KrollFunction callback) {
        Pyze.getMessageWithContentID(messageId, contentId, new PyzeInAppMessagesManager.GetMessageListener() {
            @Override
            public void onMessageDownloaded(Message message) {
                JSONObject response = new JSONObject();
                try {
                    JSONObject payload = new JSONObject();
                    payload.put("title", message.title);
                    payload.put("msg", message.body);
                    payload.put("templateId", message.templateId);
                    JSONObject templateData = new JSONObject();
                    templateData.put("titleColor", message.templateData.titleColor);
                    templateData.put("msgColor", message.templateData.msgColor);

                    JSONArray buttons = new JSONArray();
                    for (Button button : message.templateData.buttons) {
                        JSONArray jsonButton = new JSONArray();
                        jsonButton.put(0, button.title);
                        jsonButton.put(1, button.action);
                        jsonButton.put(2, button.backgroundColor);
                        jsonButton.put(3, button.titleColor);
                        buttons.put(jsonButton);
                    }
                    templateData.put("buttons", buttons);
                    payload.put("templateData", templateData);
                    response.put("payload", payload);

                } catch (JSONException e) {
                    e.printStackTrace();
                }
				HashMap map = new HashMap();
  				map.put("response", response);
                callback.call(getKrollObject(),map);
            }
        });

    }

    /***
     * End Region PyzeInAppMessages
     ***/

    /***
     Region PyzeIdentity
     ***/

    @Kroll.method
    public void  setUserIdentifier(String userId){
        PyzeIdentity.setUserIdentifer(userId);
    }

    @Kroll.method
    public void  resetUserIdentifier(){
        PyzeIdentity.resetUserIdentifer();
    }

    @Kroll.method
    public void  postTraits  (HashMap attirbutes){
        PyzeIdentity.postTraits(attirbutes);
    }

    /***
     End Region PyzeIdentity
     ***/


    /***
     * Region PyzeSceneFlow
     ***/
    @Kroll.method
    public void postSecondsOnScene(String sceneName, float seconds) {
        PyzeSceneFlow.secondsOnScene(sceneName,seconds);
    }

    /***
     * End Region PyzeSceneFlow
     ***/

    /***
     * Region PyzePersonalizationIntelligence
     ***/

    @Kroll.method
    public void getTags(final KrollFunction callback) {
        PyzePersonalizationIntelligence.getTags(new TagsManager.OnRequestTagsListener() {
            @Override
            public void onTagsRequested(HashSet<String> hashSet) {
				HashMap map = new HashMap();
  				map.put("response", hashSet);
                callback.call(getKrollObject(),map);
            }
        });
    }

    @Kroll.method
    public void isTagSet(String tag, KrollFunction callback) {
		HashMap map = new HashMap();
  		map.put("response", PyzePersonalizationIntelligence.isTagSet(tag));
        callback.call(getKrollObject(),map);
    }

    @Kroll.method
    public void areAnyTagSet(String tags, KrollFunction callback) {
		HashMap map = new HashMap();
  		map.put("response", PyzePersonalizationIntelligence.areAnyTagsSet(tags.split(",")));
        callback.call(getKrollObject(),map);
    }

    @Kroll.method
    public void areAllTagSet(String tags, KrollFunction callback) {
		HashMap map = new HashMap();
  		map.put("response", PyzePersonalizationIntelligence.areAllTagsSet(tags.split(",")));
        callback.call(getKrollObject(),map);
    }

    /***
     * End Region PyzePersonalizationIntelligence
     ***/
    
    public static PyzeGeoPoint stringToPyzeGeoPoint(String pointString) {
        PyzeGeoPoint pyzeGeoPoint = new PyzeGeoPoint();
        try {
            JSONObject pointObj = new JSONObject(pointString);
            pyzeGeoPoint.mLatitude = (float) pointObj.getDouble("lat");
            pyzeGeoPoint.mLongitude = (float) pointObj.getDouble("lng");
        } catch (JSONException e) {
            e.printStackTrace();
        }
        return pyzeGeoPoint;
    }

}

